from math import factorial

# Задание №1
# Даны значения зарплат из выборки выпускников:
# 100, 80, 75, 77, 89, 33, 45, 25, 65, 17, 30, 24, 57, 55, 70, 75, 65, 84, 90, 150.
# Посчитать (желательно без использования статистических методов наподобие std, var, mean)
# среднее арифметическое, среднее квадратичное отклонение, смещенную и несмещенную оценки дисперсий для данной выборки.

def temp(list):
    sal_mean = sum(list) / len(list)
    temp = []

    for i in list:
        temp.append((i - sal_mean) ** 2)
    return temp

def std(list):
    temp_ = temp(list)
    std_sal = (sum(temp_) / len(temp_)) ** 0.5
    return std_sal


def var1(list):
    temp_ = temp(list)
    return sum(temp_) / len(temp_)


def var2(list):
    temp_ = temp(list)
    return sum(temp_) / (len(temp_) - 1)

sal = [100, 80, 75, 77, 89, 33, 45, 25, 65, 17, 30, 24, 57, 55, 70, 75, 65, 84, 90, 150]
sal_mean = sum(sal) / len(sal)
print(f'Среднее арифметическое равняется {sal_mean}')
# Среднее арифметическое равняется 65.3

salary_std = std(sal)
print(f'Стандартное отклонение равняется {salary_std}')
# Стандартное отклонение равняется 30.823854398825596

var1 = var1(sal)
print(f' Оценка смещенной дисперсии составляет {var1}')
# Оценка смещенной дисперсии составляет 950.11

var2 = var2(sal)
print(f'Оценка несмещенной дисперсии составляет {var2}')
# Оценка несмещенной дисперсии составляет 1000.1157894736842


# # Задание №2
# В первом ящике находится 8 мячей, из которых 5 - белые. Во втором ящике - 12 мячей, из которых 5 белых.
# Из первого ящика вытаскивают случайным образом два мяча, из второго - 4. Какова вероятность того, что 3 мяча белые?

def combination(n, k):
    return int(factorial(n) / (factorial(k) * factorial(n - k)))

total_combination1 = combination(8, 2)
total_combination2 = combination(12, 4)

p1 = (combination(3, 2) / total_combination1) * (combination(5, 3) * combination(7, 1) / total_combination2)
p2 = (combination(5, 2) / total_combination1) * (combination(5, 1) * combination(7, 3) / total_combination2)
p3 = (combination(5, 1) * combination(3, 1) / total_combination1) * (combination(5, 2) * combination(7, 2) / total_combination2)

total_P = p1 + p2 + p3
print(f' Вероятность того, что 3 мяча белые составляет {total_P}')
# Вероятность того, что 3 мяча белые составляет 0.3686868686868687


# Задание №3
# На соревновании по биатлону один из трех спортсменов стреляет и попадает в мишень.
# Вероятность попадания для первого спортсмена равна 0.9, для второго — 0.8, для третьего — 0.6.
# Найти вероятность того, что выстрел произведен: a). первым спортсменом б). вторым спортсменом в). третьим спортсменом.
total_p = (1/3 * 0.9) +  (1/3 * 0.8) +  (1/3 * 0.6)
print(f'Вероятность попадания для первого спортсмена составляет {(1/3 * 0.9) / total_p}')
print(f'Вероятность попадания для второго спортсмена составляет {(1/3 * 0.8) / total_p}')
print(f'Вероятность попадания для третьего спортсмена составляет {(1/3 * 0.6) / total_p}')
# Вероятность попадания для первого спортсмена составляет 0.391304347826087
# Вероятность попадания для второго спортсмена составляет 0.3478260869565218
# Вероятность попадания для третьего спортсмена составляет 0.2608695652173913


# Задание №4
# В университет на факультеты A и B поступило равное количество студентов,
# а на факультет C студентов поступило столько же, сколько на A и B вместе.
# Вероятность того, что студент факультета A сдаст первую сессию, равна 0.8.
# Для студента факультета B эта вероятность равна 0.7, а для студента факультета C - 0.9. Студент сдал первую сессию.
# Какова вероятность, что он учится: a). на факультете A б). на факультете B в). на факультете C?

total_p_ = (1/4 * 0.8) +  (1/4 * 0.7) +  (1/2 * 0.9)
print(f'Вероятность, что студен учится: на факультете А составляет {(1/4 * 0.8) / total_p_}')
print(f'Вероятность, что студен учится: на факультете В составляет {(1/4 * 0.7) / total_p_}')
print(f'Вероятность, что студен учится: на факультете С составляет {(1/2 * 0.9) / total_p_}')
# Вероятность, что студен учится: на факультете А составляет 0.24242424242424246
# Вероятность, что студен учится: на факультете В составляет 0.21212121212121213
# Вероятность, что студен учится: на факультете С составляет 0.5454545454545455

# Задание №5
# Устройство состоит из трех деталей. Для первой детали вероятность выйти из строя в первый месяц равна 0.1,
# для второй - 0.2, для третьей - 0.25. Какова вероятность того, что в первый месяц выйдут из строя:
# а). все детали б). только две детали в). хотя бы одна деталь г). от одной до двух деталей?

print(f'Вероятность того, что в первый месяц выйдут из строя из строя только две детали составляет {0.1*0.2*0.25}')
# Вероятность того, что в первый месяц выйдут из строя из строя только две детали составляет 0.005000000000000001

broken_2 = (0.1*0.2*(1-0.25))+(0.1*0.25*(1-0.2))+(0.2*0.25*(1-0.1))
print(f'Вероятность того, что в первый месяц выйдут из строя только две детали составляет {broken_2}')
# Вероятность того, что в первый месяц выйдут из строя только две детали составляет 0.08000000000000002

broken_1 = (0.1*(1-0.2)*(1-0.25))+((1-0.1)*0.25*(1-0.2))+(0.2*(1-0.25)*(1-0.1))
broken_2 = (0.1*0.2*(1-0.25))+(0.1*0.25*(1-0.2))+(0.2*0.25*(1-0.1))
broken_3 = (0.1*0.2*0.25)
broken_ = broken_1 + broken_2 + broken_3
print(f'Вероятность того, что в первый месяц выйдут из строя хотя бы одна деталь составляет {broken_}')
# Вероятность того, что в первый месяц выйдут из строя хотя бы одна деталь составляет 0.46000000000000013

broken_1 = (0.1*(1-0.2)*(1-0.25))+((1-0.1)*0.25*(1-0.2))+(0.2*(1-0.25)*(1-0.1))
broken_2 = (0.1*0.2*(1-0.25))+(0.1*0.25*(1-0.2))+(0.2*0.25*(1-0.1))
print(f'Вероятность того, что в первый месяц выйдут строя от одной до двух деталей составляет {broken_1+broken_2}')
# Вероятность того, что в первый месяц выйдут строя от одной до двух деталей составляет 0.4550000000000001